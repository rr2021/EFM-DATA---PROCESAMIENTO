#======================================================
# Importing libraries
#======================================================
import numpy as np
import datetime
import matplotlib.pyplot as plt
import pandas as pd

"""  Para grafico interactivo:
#import matplotlib
#matplotlib.use('PS')
"""

#======================================================
# Dataframe importado a PANDAS
#======================================================
df = pd.read_csv('C:/Users/rr98/OneDrive/CAMPO ELECTRICO ATMOSFERICO/DATA/2022/ICA-05222022.efm' ,
                 index_col=0, usecols=(0,1))


# MEDIA POR MINUTO
df.index = pd.to_datetime(df.index)

df2 = (df.resample('60S').mean().ffill())
# Mean para promedia, Fill para llenar datos cuando hay filas vacias, de lo contrario habr√° un error

"""
S     = Para usar segundos
Min   = Para usar minutos
"""

#df2.to_string(r'C:/Users/rr98/OneDrive/CAMPO ELECTRICO ATMOSFERICO/MEDICIONES CORREGIDAS/media_minuto3.txt')

#======================================================
# Se guarda el archivo con las medias por minuto o por hora en un .csv para leerlo mas adelante
#======================================================
df2.to_csv(r'C:/Users/rr98/OneDrive/CAMPO ELECTRICO ATMOSFERICO/MEDICIONES CORREGIDAS/media_minuto3.csv')
#           header='00:00:00', index=None, date_format='%s' ,sep=' ', mode='a')

#======================================================
# CARGANDO DATOS DE LA COLUMNA DE TIEMPO
#======================================================

time2  = np.loadtxt('C:/Users/rr98/OneDrive/CAMPO ELECTRICO ATMOSFERICO/MEDICIONES CORREGIDAS/media_minuto3.csv', 
                   delimiter=',', unpack=True, skiprows =1,usecols=[0],dtype=bytes).astype(str)

#creating a variable with empty elements
hourday2=[]
for i in range(len(time2)):
  hour = datetime.datetime.strptime(time2[i],'%Y-%m-%d %H:%M:%S') # Divide time using this format (check that time has that format)
  HH=(hour.strftime('%H')) # save hour
  MM=(hour.strftime('%M')) # save minute
  SS=(hour.strftime('%S')) # save second
  hourday2.append(float(HH)+float(MM)/60.+float(SS)/3600.) # Time is hours format and save in the hourday variable

#======================================================
# CARGANDO DATOS DE LA COLUMNA DE VALORES DE CAMPO ELECTRICO
#======================================================
efm2 = np.loadtxt('C:/Users/rr98/OneDrive/CAMPO ELECTRICO ATMOSFERICO/MEDICIONES CORREGIDAS/media_minuto3.csv',
                     delimiter=',', unpack=True, skiprows =1,usecols=[1])

# CALIBRACION
calibrated = [(element + (0.083670597))*1000/4.8953412 for element in efm2]

#PLOTEO
plt.figure(num=None, dpi=300, facecolor='w', edgecolor='k')

plt.plot(hourday2,calibrated,'b')

#Ancho de linea: linewidth=2.0

ax = plt.gca()
ax.set_title('Media por Minuto: ICA-05222022.efm', loc="center" ,y=1.12, pad=-20)

plt.ylabel('V/m') #,fontsize=80#
plt.xlabel('Hour [UT]' )  #,fontsize=80#
#plt.ylim([60,180]) 
plt.xlim([0,24] )
plt.xticks([0,2,4,6,8,10,12,14,16,18,20,22,24])
#plt.xticks(20,24)
           
#plt.legend(loc="center left")
plt.grid()
#plt.rc('xtick',labelsize=40)

#======================================================
#Saving file
#======================================================
plt.savefig('Media por minuto ploteada 0522022 RESAMPLE.jpg',dpi=400)
